name: CI/CD ec2 app

on:
  push:
    branches: [main]

jobs:
  worker_server_unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch code from repo
        uses: actions/checkout@v2

      - name: Setup Bun Runtime
        uses: antongolub/action-setup-bun@v1.13.1
        with:
          bun-version: 0.1.2

      - name: Install dependencies
        working-directory: bunWorker
        run: bun install

      - name: Run bun test
        working-directory: bunWorker
        run: bun test

  build_express_and_socket:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy express and socket server
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          host: ${{ secrets.HOST_DNS_MAIN }}
          username: ${{ secrets.EC2_USERNAME }}
          script: |
            cd /home/ubuntu/leetcode-clone

            # Clean up
            docker-compose -f docker-compose-main.yml down
            docker system prune -a -f
            docker volume prune -f

            # Pull change
            git fetch origin main
            git reset --hard origin/main

            # Update database
            # docker run --name mysql -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} -d mysql:8.0.33
            # docker exec -i mysql sh -c 'exec mysql -h db-leetclone.c6iiblrlfvab.ap-northeast-3.rds.amazonaws.com -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} leetclone' < backend/dbBackup/leetclone.sql
            # docker container stop mysql
            # docker container rm mysql

            # Clear Redis
            docker run --name redis -p 6379 -d redis
            docker run -it redis redis-cli -h cache-leetclone.1nyq2c.ng.0001.apn3.cache.amazonaws.com flushall

            # Compose
            docker-compose -f docker-compose-main.yml build --no-cache
            docker-compose -f docker-compose-main.yml up -d

  build_worker_server:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy worker server
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          host: ${{ secrets.HOST_DNS_WORKER }}
          username: ${{ secrets.EC2_USERNAME }}
          script: |
            cd /home/ubuntu/leetcode-clone

            #Clean up
            docker-compose -f docker-compose-worker.yml down
            docker system prune -a -f
            docker volume prune -f

            #Pull change    
            git fetch origin main
            git reset --hard origin/main

            #Compose
            docker-compose -f docker-compose-worker.yml build --no-cache
            docker-compose -f docker-compose-worker.yml up -d

  express_integration_test:
    runs-on: ubuntu-latest
    needs: [build_express_and_socket, build_worker_server]
    steps:
      - name: Test express server
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          host: ${{ secrets.HOST_DNS_MAIN }}
          username: ${{ secrets.EC2_USERNAME }}
          script: |
            # Test
            docker exec express_server /bin/bash -c "cd backend && npm run prod_intg_test"
